docker exec -it reverse_proxy_demo bash


cat filename.ext will open the content of the file in the shell enviroment

echo '' > filename.ext will empty that file 

ls -l will list the content of the directory

systemctl reload nginx will reload the server

echo '<?php phpinfo(); ?>' > /sites/demo/info.php will create that file in the site location

./configure --help to show all configuration command 

./configure --help | grep dynamic filters help command for dynamic modules

all configure under etc folder

nginx -V shows all existing configured modules

nano filename to open a file for editing on bash

./configure --help | grep http_v2 which require ssl to configure.

mkdir /etc/nginx/ssl 

cd into it
openssl req -x509 -days 10 -nodes -netkey rsa:2048 -keyout /etc/nginx/ssl/self.key -out /etc/nginx/ssl/self.crt 
to generate a selfsigned public and private key

openssl dhparams 2048 -out /etc/nginx/ssl/dhparams.pem to create the file for the server consumption

using siege to test concurrent request rate
siege -v -r 2 -c 5 uri
where v for verbose r for rate c for concurrent which will result in 10 hits

setting rate limitin
limit_req_zone $server_name will apply to the server name.

limit_req_zone $binary_remote_addr will apply to per user as since each has unique ip address suitable for preventing
brute force and suitable for loging route.

limit_req_zone $request_uri will apply to every uri request.

Authentication:

mkdir -p auth /etc/nginx/.htpasswd

apt-get install nghttp2-client
apt-get install apache2-utils

htpasswd -c /etc/nginx/.htpasswd #to generate a password and user
nginx:
  # Note : Only nginx:alpine supports bcrypt.
  # If you don't need to use bcrypt, you can use a different tag.
  # Ref. https://github.com/nginxinc/docker-nginx/issues/29
  image: "nginx:alpine"
  ports:
    - 5043:443
  links:
    - registry:registry
  volumes:
    - ./auth:/etc/nginx/conf.d
    - ./auth/nginx.conf:/etc/nginx/nginx.conf:ro

registry:
  image: registry:2
  volumes:
    - ./data:/var/lib/registry
